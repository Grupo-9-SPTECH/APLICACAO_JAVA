/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Medidas;

import com.github.britooo.looca.api.core.Looca;
import com.github.britooo.looca.api.group.discos.Disco;
import com.github.britooo.looca.api.group.discos.DiscoGrupo;
import com.github.britooo.looca.api.group.memoria.Memoria;
import com.github.britooo.looca.api.group.processador.Processador;
import com.github.britooo.looca.api.group.processos.Processo;
import com.github.britooo.looca.api.group.processos.ProcessoGrupo;
import com.github.britooo.looca.api.util.Conversor;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 *
 * @author rmsouza
 */
public class TelaMedidasMaquina extends javax.swing.JFrame {
//CONEXAO BANCO

    ConexaoTechHealth connection = new ConexaoTechHealth();
    JdbcTemplate banco = connection.getConexao();

//INSTANCIAS
    Looca looca = new Looca();
    Memoria memoria = new Memoria();
    Processador processador = new Processador();
    Conversor conversor = new Conversor();

    DiscoGrupo grupoDeDiscos = new DiscoGrupo();
    List<Disco> discos = grupoDeDiscos.getDiscos();

    ProcessoGrupo grupoProcesso = new ProcessoGrupo();
    List<Processo> processos = grupoProcesso.getProcessos();

    /**
     * Creates new form TelaMedidasMaquina
     */
    public TelaMedidasMaquina() {
        initComponents();
        //CRIANDO VARIAVEIS PRA PEGAR AS MEDIDAS
        //Long memoria_Em_Uso = Conversor.formatarBytes(memoria.getEmUso()); -------- PS: essa foi direto no insert       
        //        Double percent_Uso_Processador = processador.getUso();
        //        //Double percent_Uso_Ram_Processo = processo.getUsoMemoria();
        //        //Long numero_Leituras_Disco = disco.getLeituras();
        //        String data = new SimpleDateFormat("dd/MM/yyyy ").format(dataHoraAtual);
        //        String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
        //        String momento = data + hora;
        //
        //        //INSERINDO VALORES NA TABELA
        //        for (int i = 1; i <= 4; i++) {
        //            Integer fkMaquina = i;
        //            for (Processo itemProcesso : processos) {
        //                Double percent_Uso_Cpu_Processo = itemProcesso.getUsoCpu();
        //                Double percent_Uso_Ram_Processo = itemProcesso.getUsoMemoria();
        //                for (int cont = (processos.size() - 1); cont < processos.size(); cont++) {
        //                    for (Disco itemDisco : discos) {
        //                        for (int contDisco = (discos.size() - 1); contDisco < discos.size(); contDisco++) {
        //
        //                            banco.update("INSERT INTO medida VALUES (?, ?, ?, ?, ?, ?, ?, ?)", null,
        //                                    Conversor.formatarBytes(memoria.getEmUso()),
        //                                    percent_Uso_Cpu_Processo,
        //                                    percent_Uso_Processador, percent_Uso_Ram_Processo,
        //                                    Conversor.formatarBytes(itemDisco.getLeituras()), momento, fkMaquina);
        //                        }
        //                    }
        //                }
        //                break;
        //            }
        //        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblIdMaq01 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblAlaHospMaq01 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblUsoMemoriaMaq01 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblUsoCpuMaq01 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblUsoProcessMaq01 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblUsoRamMaq01 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblLeitDiscoMaq01 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblDataMaq01 = new javax.swing.JLabel();
        btnAtualizarMedidasMaq01 = new javax.swing.JButton();
        btnVerInfMaq = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Medidas da Máquina");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("ID da Máquina:");

        lblIdMaq01.setText("-----");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Ala Hospitalar:");

        lblAlaHospMaq01.setText("-----");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Uso da Memoria:");

        lblUsoMemoriaMaq01.setText("-----");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("%Uso da CPU no processo:");

        lblUsoCpuMaq01.setText("-----");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("%Uso do Processador:");

        lblUsoProcessMaq01.setText("-----");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("%Uso da RAM no processo:");

        lblUsoRamMaq01.setText("-----");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Numero de leituras no disco:");

        lblLeitDiscoMaq01.setText("-----");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Data e Hora:");

        lblDataMaq01.setText("-----");

        btnAtualizarMedidasMaq01.setText("Atualizar Medidas");
        btnAtualizarMedidasMaq01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarMedidasMaq01ActionPerformed(evt);
            }
        });

        btnVerInfMaq.setText("Ver Informações das Máquinas");
        btnVerInfMaq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerInfMaqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(625, 625, 625)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(511, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(95, 95, 95))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAlaHospMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIdMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsoMemoriaMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsoCpuMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLeitDiscoMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsoProcessMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsoRamMaq01, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(547, 547, 547))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAtualizarMedidasMaq01)
                        .addGap(144, 144, 144)
                        .addComponent(btnVerInfMaq)
                        .addGap(291, 291, 291))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblIdMaq01))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblAlaHospMaq01))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblUsoMemoriaMaq01))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsoCpuMaq01)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblUsoProcessMaq01))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblUsoRamMaq01))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblLeitDiscoMaq01))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblDataMaq01))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarMedidasMaq01)
                    .addComponent(btnVerInfMaq))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //MAQUINA 1
    private void btnAtualizarMedidasMaq01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarMedidasMaq01ActionPerformed

        //CRIANDO VARIAVEIS PRA PEGAR AS MEDIDAS
        //Long memoria_Em_Uso = Conversor.formatarBytes(memoria.getEmUso()); -------- PS: essa foi direto no insert       
        Double percent_Uso_Processador = processador.getUso();
        //Double percent_Uso_Ram_Processo = processo.getUsoMemoria();
        //Long numero_Leituras_Disco = disco.getLeituras();

        //INSERINDO VALORES NA TABELA
        for (Processo itemProcesso : processos) {
            Double percent_Uso_Cpu_Processo = itemProcesso.getUsoCpu();
            Double percent_Uso_Ram_Processo = itemProcesso.getUsoMemoria();
            for (int cont = (processos.size() - 1); cont < processos.size(); cont++) {
                for (Disco itemDisco : discos) {
                    for (int contDisco = (discos.size() - 1); contDisco < discos.size(); contDisco++) {

                        Date dataHoraAtual = new Date();
                        String novaData = new SimpleDateFormat("dd/MM/yyyy ").format(dataHoraAtual);
                        String novaHora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
                        String novoMomento = novaData + novaHora;

                        banco.update("INSERT INTO medida VALUES (?, ?, ?, ?, ?, ?, ?, ?)", null,
                                Conversor.formatarBytes(memoria.getEmUso()),
                                percent_Uso_Cpu_Processo,
                                percent_Uso_Processador, percent_Uso_Ram_Processo,
                                Conversor.formatarBytes(itemDisco.getLeituras()), novoMomento, "1");

                    }
                }
            }
            break;
        }

        //MAQUINA 01
        Medida med = new Medida();
        List<Medida> listaMedidaMaq01 = banco.query("select idMedida, maquina.idMaquina, maquina.ala_Hospitalar, memoria_Em_Uso,"
                + "percent_Uso_Cpu_Processo, percent_Uso_Processador, percent_Uso_Ram_Processo,"
                + "numero_Leituras_Disco, momento from medida right join maquina "
                + "on medida.fkMaquina = maquina.idMaquina"
                + " where maquina.idMaquina = 1;", new BeanPropertyRowMapper(Medida.class));

//        for (int i = (listaMedidaMaq01.size() - 1); i < listaMedidaMaq01.size(); i++) {
//            System.out.println(listaMedidaMaq01.get(i));
//
//        }
        lblIdMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getIdMaquina().toString());
        lblAlaHospMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getAla_Hospitalar());
        lblUsoMemoriaMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getMemoria_Em_Uso());
        lblUsoCpuMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getPercent_Uso_Cpu_Processo().toString()  + "%");
        lblUsoProcessMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getPercent_Uso_Processador().toString()  + "%");
        lblUsoRamMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getPercent_Uso_Ram_Processo().toString()  + "%");
        lblLeitDiscoMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getNumero_Leituras_Disco());
        lblDataMaq01.setText(listaMedidaMaq01.get(listaMedidaMaq01.size() - 1).getMomento());

    }//GEN-LAST:event_btnAtualizarMedidasMaq01ActionPerformed

    private void btnVerInfMaqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerInfMaqActionPerformed
        TelaInfMaquina telaInf = new TelaInfMaquina();
        telaInf.setVisible(true);
    }//GEN-LAST:event_btnVerInfMaqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMedidasMaquina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMedidasMaquina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMedidasMaquina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMedidasMaquina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMedidasMaquina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarMedidasMaq01;
    private javax.swing.JButton btnVerInfMaq;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblAlaHospMaq01;
    private javax.swing.JLabel lblDataMaq01;
    private javax.swing.JLabel lblIdMaq01;
    private javax.swing.JLabel lblLeitDiscoMaq01;
    private javax.swing.JLabel lblUsoCpuMaq01;
    private javax.swing.JLabel lblUsoMemoriaMaq01;
    private javax.swing.JLabel lblUsoProcessMaq01;
    private javax.swing.JLabel lblUsoRamMaq01;
    // End of variables declaration//GEN-END:variables
}
